/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 
apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"

configurations {
    balRuntime
}

dependencies {
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.ballerinalang:ballerina-lang:0.992.0-m1'

    implementation project(':ballerina-config')
    implementation project(':ballerina-core')
//    implementation project(':ballerina-lang')
    implementation project(':ballerina-tool')
    implementation project(':ballerina-io')
    implementation project(':testerina:testerina-core')
    implementation project(':ballerina-packerina')
    implementation project(':ballerina-logging')
    implementation project(':ballerina-http')
    implementation project(':ballerina-mime')

    implementation 'com.h2database:h2'
    implementation 'org.testng:testng'
    testCompile 'org.awaitility:awaitility'
    testCompile 'com.zaxxer:HikariCP'
    testCompile 'org.slf4j:slf4j-jdk14'
    testCompile 'org.hsqldb:hsqldb'
    testCompile 'org.mockito:mockito-all'
    testCompile 'io.netty:netty-transport'
    testCompile 'io.netty:netty-codec'
    testCompile 'org.wso2.transport.http:org.wso2.transport.http.netty'
    testCompile 'org.apache.ws.commons.axiom:axiom-dom'
    testCompile 'org.wso2.carbon.messaging:org.wso2.carbon.messaging'
    testCompile 'org.testng:testng'
    testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')
    testCompile project(':ballerina-runtime')

    balRuntime project(':ballerina-runtime')

    baloImplementation project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-transactions', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-http', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-config-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-log-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-file', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-auth', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-mime', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-cache', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-time', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-task', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-crypto', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-encoding', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-math', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    // baloImplementation project(path: ':ballerina-websub', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-jms', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-internal', configuration: 'baloImplementation')
    // baloImplementation project(path: ':ballerina-grpc', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-streams', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-observability', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-system', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-utils', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-jwt', configuration: 'baloImplementation')
}

description = 'Ballerina - Unit Test Module'

task createBre(type: org.gradle.api.tasks.Copy) {
    from configurations.balRuntime
    into "$buildDir/bre/lib"
}

test {
    systemProperty "ballerina.home", "$buildDir"
    systemProperty "java.util.logging.config.file", "src/test/resources/logging.properties"
    systemProperty "java.util.logging.manager", "org.ballerinalang.logging.BLogManager"

    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }

    afterSuite { suite, result ->
        result.exception?.printStackTrace()
    }

    dependsOn createBre
}

configurations {
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    testCompile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    testCompile.exclude group: 'org.ops4j.pax.logging', module: 'pax-logging-api'
    testCompile.exclude group: 'org.codehaus.woodstox', module: 'woodstox-core-asl'
    testCompile.exclude group: 'org.codehaus.woodstox', module: 'stax2-api'
}
